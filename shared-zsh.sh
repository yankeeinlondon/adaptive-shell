#!/usr/bin/env bash

# shellcheck source="./shared.sh"
source "${HOME}/.config/sh/shared.sh"

if ! is_empty "${WEZTERM_UNIX_SOCKET}"; then 
  # shellcheck source="./wezterm.sh"
  source "${HOME}/.config/sh/wezterm.sh"
fi

if dir_exists "${HOME}/Library/Android/sdk"; then
    export ANDROID_HOME="${HOME}/Library/Android/sdk"
    # shellcheck disable=SC2155
    export NDK_HOME="${ANDROID_HOME}/nd/$(ls -1 "${ANDROID_HOME}/ndk")"
fi

# shellcheck source="./prep.sh"
source "${HOME}/.config/sh/prep.sh"

# source user's `.env` in home directory
# if it exists.
if file_exists "${HOME}/.env"; then
  source "${HOME}/.env"
fi

if has_command "kubectl"; then
alias k='kubectl'
fi

if has_command "nvim"; then
  alias v='nvim'
fi

if has_command "lazygit"; then
alias lg='lazygit'
fi

if has_command "htop"; then
  alias top='htop'
fi

if has_command "python3"; then
alias python='python3'
alias pip='pip3'
fi

if has_command "fzf"; then
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always --lin-range :500 {}"
fi

if has_command "eza"; then 
    alias ls='eza -a --icons=always'
    alias ll='eza -lhga --git '
    alias ld='eza -lDga --git'
    alias lt='eza -lTL 3 --icons=always'
    export FZF_ALT_C_OPTS="--preview 'eza --tree -color=always {} | head -200'"
elif has_command "exa"; then
    alias ls='exa -a '
    alias ll='exa -lhga --git '
    alias ld='exa -lDga --git'
    alias lt='exa -lTL 3 '
    export FZF_ALT_C_OPTS="--preview 'exa --tree -color=always {} | head -200'"
fi

# FZF 
if has_command "fzf"; then
    eval "$(fzf --zsh)"
    _fzf_compgen_path() {
        fd --hidden --exclude .git . "$1"
    }

    _fzf_compgen_dir() {
        fd --type=d --hidden --exclude .git . "$1"
    }

    _fzf_comprun() {
        local command=$1
        shift

        case "$command" in 
        cd)             fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
        export|unset)   fzf --preview "eval 'echo \$' {}" "$@" ;;
        ssh)            fzf --preview 'dig {}' "$@" ;;
        *)              fzf --preview "--preview 'bat -n --color=always --lin-range :500 {}" "$@" ;;
        esac
    }
fi

# use "dust" over base "du" if available
function du() {
  if has_command "dust"; then
    dust -X .git -X node_modules "$*" && log "\nExcluded .git and node_modules directory from results" && log "use 'dust' to not exclude"
  else
    /usr/bin/du "$*"
  fi
}


function vitesse() {
  if [ -z "$1" ]; then
    log "Syntax: ${BOLD}vitesse${NO_BOLD} ${ITALIC}\${1}${NO_ITALIC}, ${DIM}where ${NO_DIM}${ITALIC}\${1}${NO_ITALIC} ${DIM}indicates the directory to install to  ${NO_DIM}\n"
    return
  fi

  npx degit antfu/vitesse "$1" --force
}


function vitesse-ext() {
  if [ -z "$1" ]; then
    log "Syntax: ${BOLD}vitesse-ext${NO_BOLD} ${ITALIC}\${1}${NO_ITALIC}, ${DIM}where ${NO_DIM}${ITALIC}\${1}${NO_ITALIC} ${DIM}indicates the directory to install to  ${NO_DIM}\n"
    return
  fi

  npx degit antfu/vitesse-webext "$1" --force
}

function gitignore() {
  if [ ! -f "./.gitignore" ]; then
    log "- creating ${BLUE}.gitignore${RESET} file"
    log ""
    cat <<'EOF' > "./.gitignore"
# Logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
**/trace/*.json
# Runtime data
*.pid
*.seed
*.pid.lock
# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov
# Coverage directory used by tools like istanbul
coverage
# nyc test coverage
.nyc_output
# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt
# Bower dependency directory (https://bower.io/)
bower_components
# node-waf configuration
.lock-wscript
# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release
# Dependency directories
node_modules/
jspm_packages/
# Optional npm cache directory
.npm
# Optional eslint cache
.eslintcache
# Optional REPL history
.node_repl_history
# Output of 'npm pack'
*.tgz
# Yarn Integrity file
.yarn-integrity
# dotenv environment variables file
.env
# next.js build output
.next
# OS X temporary files
.DS_Store
# Transpiled Destinations
**/dist/
**/.presite
frontend/.vite-ssg-dist/**
/functions
# for simple TODOs
/todo.md

# Local Netlify folder
.netlify

.tsbuildinfo
trace/*
.trace/*
EOF
  else
    log "- the ${BLUE}.gitignore${RESET} file already exists, ${ITALIC}skipping${RESET}"
  fi
}


